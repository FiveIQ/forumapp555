{"version":3,"sources":["actions/types.js","apis/streams.js","history.js","actions/index.js","components/streams/StreamForm.js","components/streams/StreamCreate.js","components/Modal.js","components/streams/StreamDelete.js","components/streams/StreamEdit.js","components/streams/LikePost.js","components/streams/StreamList.js","components/streams/StreamShow.js","components/streams/CommentPost.js","components/streams/StreamProfile.js","components/GoogleAuth.js","components/Header.js","components/App.js","reducers/authReducer.js","reducers/streamReducer.js","reducers/index.js","index.js"],"names":["SIGN_IN","SIGN_OUT","CREATE_STREAM","FETCH_STREAMS","FETCH_STREAM","DELETE_STREAM","EDIT_STREAM","axios","create","baseURL","historyy","createBrowserHistory","basename","empty","type","fetchStreams","dispatch","a","streams","get","response","payload","data","fetchStream","id","likePost","user","patch","likes","StreamForm","renderInput","formProps","className","meta","error","touched","label","rows","input","autoComplete","renderError","onSubmit","formValues","props","title","notitle","Field","name","component","this","handleSubmit","React","Component","streamformexport","reduxForm","form","validate","errors","length","description","StreamCreate","createStream","streamcreateexport","connect","getState","userId","authreducer","post","history","push","Modal","ReactDOM","createPortal","style","position","top","left","height","width","onClick","onDismiss","e","stopPropagation","header","content","actions","document","querySelector","StreamDelete","Fragment","deleteStream","match","params","to","stream","renderContent","renderActions","state","ownProps","streamreducer","delete","StreamEdit","editStream","initialValues","_","pick","LikePost","editLikes","item","i","currentUserId","j","filter","cursor","isSignedIn","streamid","alert","checkLikes","streamlikes","calculatelikes","Object","values","StreamList","margin","map","renderAdmin","overflow","textOverflow","wordBreak","display","WebkitLineClamp","WebkitBoxOrient","marginBottom","noButton","background","renderCreate","renderList","StreamShow","renderReplyButton","comment","renderCreateComment","fetchComments","fetchReplies","commentid","replies","reply","commentId","comments","paddingRight","marginRight","marginTop","marginLeft","renderReplies","renderComments","commentReducer","replyReducer","postid","CommentPost","path","createComment","replyComment","replyid","exact","Profile","totalLikes","reduce","b","filterStreams","fetch","profileexport","GoogleAuth","attemptSignIn","auth","signIn","attemptSignOut","signOut","onAuthChange","currentUser","getId","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","renderAuthButton","Header","renderViewProfile","App","justifyContent","INITIAL_STATE","authReducer","action","streamReducer","mapKeys","omit","temp","combineReducers","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","render"],"mappings":"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","file":"static/js/main.2756a768.chunk.js","sourcesContent":["export const SIGN_IN = 'SIGN_IN';\nexport const SIGN_OUT = 'SIGN_OUT';\nexport const CREATE_STREAM = 'CREATE_STREAM';\nexport const FETCH_STREAMS = 'FETCH_STREAMS';\nexport const FETCH_STREAM = 'FETCH_STREAM';\nexport const DELETE_STREAM = 'DELETE_STREAM';\nexport const EDIT_STREAM = 'EDIT_STREAM';\n","import axios from 'axios';\n\nexport default axios.create({baseURL: \"http://simpchess.com/api\"});","import {createBrowserHistory} from 'history';\n\nconst historyy = createBrowserHistory({ basename: '/forumapp' });\n\n\nexport default historyy;","import {SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAM, FETCH_STREAMS, DELETE_STREAM, EDIT_STREAM} from './types';\nimport streams from '../apis/streams';\nimport history from '../history';\n\n\nexport const signIn = (userId) =>{\n    return {\n        type: SIGN_IN,\n        payload: userId\n    };\n};\n\nexport const signOut = () => {\n    return {type: SIGN_OUT};\n};\n\nexport const empty = () =>{\n    return {\n        type: \"EMPTY\"\n    };\n};\n\nexport const createStream = formValues => async (dispatch, getState) => {\n    const userId = getState().authreducer.userId;\n    const response = await streams.post('/streams', {...formValues, userId});\n    \n\n    dispatch( {\n        type: CREATE_STREAM,\n        payload: response.data\n    });\n\n    history.push('/');\n};\n\nexport const createComment = (formValues, postid) => async (dispatch, getState) => {\n    const userId = getState().authreducer.userId;\n    const response = await streams.post(`/stream/${postid}/comments`, {...formValues, userId});\n    \n\n    dispatch( {\n        type: \"CREATE_COMMENT\",\n        payload: response.data\n    });\n\n    history.push(`/show/${postid}`);\n};\n\nexport const replyComment = (formValues, postid, commentid) => async (dispatch, getState) => {\n    const userId = getState().authreducer.userId;\n    const response = await streams.post(`/comment/${commentid}/replies`, {...formValues, userId});\n    \n    dispatch( {\n        type: \"REPLY_COMMENT\",\n        payload: response.data\n    });\n\n    history.push(`/show/${postid}`);\n};\n\nexport const fetchReplies = () => async (dispatch) => {\n    const response = await streams.get('/replies');\n    dispatch( {\n        type: \"FETCH_REPLIES\",\n        payload: response.data\n    });\n};\n\nexport const fetchStreams = () => async dispatch =>{\n    const response = await streams.get('/streams');\n    dispatch( {\n        type: FETCH_STREAMS,\n        payload: response.data\n    });\n};\n\nexport const fetchComments = (postid) => async dispatch =>{\n    const response = await streams.get(`/stream/${postid}/comments`);\n    dispatch( {\n        type: \"FETCH_COMMENTS\",\n        payload: response.data\n    });\n};\n\nexport const fetchStream = (id) => async dispatch =>{\n    const response = await streams.get(`/streams/${id}`);\n\n    dispatch( {\n        type: FETCH_STREAM,\n        payload: response.data\n    });\n};\n\nexport const filterStreams = (userId) =>{\n    return{\n        type: \"FILTER_STREAMS\",\n        payload: userId\n    };\n\n};\n\nexport const editStream = (id, formValues) => async dispatch =>{\n    const response = await streams.patch(`/streams/${id}`, formValues);\n  \n    dispatch( {\n        type: EDIT_STREAM,\n        payload: response.data\n    });\n\n    history.push('/');\n};\n\nexport const deleteStream = (id) => async dispatch =>{\n    await streams.delete(`/streams/${id}`);\n    dispatch( {\n        type: DELETE_STREAM,\n        payload: id\n    });\n\n    history.push('/');\n};\n\nexport const likePost = (id, user, data) => async dispatch =>{\n    const response = await streams.patch(`/streams/${id}`, {likes: data});\n\n    dispatch( {\n        type: FETCH_STREAM,\n        payload: response.data\n    });\n};\n","import React from 'react';\nimport {Field, reduxForm} from 'redux-form';\n\nclass StreamForm extends React.Component {\n    renderError(meta) {\n        if (meta.touched && meta.error){\n            return (\n                <div className = \"ui error message\">\n                    <div className = \"header\">{meta.error}</div>\n                </div>\n            );\n        }\n\n    };\n\n\n    renderInput = (formProps) => {\n        const className = `field ${formProps.meta.error && formProps.meta.touched ? 'error' : ''}`;\n        return (\n            <div className = {className}>\n                <label>{formProps.label}</label>\n                <textarea rows = {formProps.rows}{...formProps.input} autoComplete = \"off\"/>\n                {this.renderError(formProps.meta)}\n            </div>\n        );\n    };\n\n    onSubmit = (formValues) => {\n        this.props.onSubmit(formValues);\n    };\n\n    title = () =>{\n        if (!this.props.notitle){\n            return <Field name = \"title\" component = {this.renderInput} label = \"Enter Title\" rows = \"1\"/>\n        }\n        else{\n            return null;\n        }\n    }\n\n    render(){\n        return (\n            <form onSubmit = {this.props.handleSubmit(this.onSubmit)} className=\"ui form error\">\n                {this.title()}\n                <Field name = \"description\" component = {this.renderInput} label = \"Enter Description\" rows = \"5\"/>\n                <button className = \"ui button primary fluid\">Submit</button>\n            </form>\n        );\n    };\n\n};\n\nconst validate = (formValues) =>{\n    const errors = {};\n   \n    if (!formValues.title){\n        errors.title = \"A Title Is Required\"\n    } else if (formValues.title.length >10){\n        errors.title = \"Title Too Long\"\n    }\n\n    if (!formValues.description){\n        errors.description = \"A Description Is Required\"\n    }\n\n    return errors;\n};\n\nconst streamformexport =  reduxForm({form: 'streamForm', validate})(StreamForm);\nexport default streamformexport;","import React from 'react';\nimport {connect} from 'react-redux';\nimport {createStream} from '../../actions';\nimport StreamForm from './StreamForm';\n\nclass StreamCreate extends React.Component {\n    onSubmit = (formValues) => {\n        this.props.createStream(formValues);\n    };\n\n    render(){\n        return (\n            <div>\n                <h3>Create a Post</h3>\n                <StreamForm onSubmit={this.onSubmit} />\n            </div>\n        );\n    };\n\n};\n\nconst streamcreateexport = connect(null, {createStream})(StreamCreate);\nexport default streamcreateexport;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Modal = props =>{\n    return ReactDOM.createPortal(\n        <div style = {{position: \"fixed\", top: \"50%\", left: \"50%\", height: \"100vh\", width: \"100vw\"}} onClick = {props.onDismiss} className = \"ui dimmer modals visible active\">\n            <div onClick={(e) => e.stopPropagation()} className = \"ui standard modal visible active\">\n                <i onClick = {props.onDismiss} className = \"close icon\"></i>\n                <div className = \"header\">\n                    {props.header}\n                </div>\n                <div className = \"content\">\n                    {props.content}\n                </div>\n                <div className = \"actions\">\n                    {props.actions}\n                </div>\n            </div>\n        </div>,\n        document.querySelector('#modal')\n    );\n};\n\nexport default Modal;","import React from 'react';\nimport {connect} from 'react-redux';\nimport  {Link} from 'react-router-dom';\n\n\n\nimport Modal from '../Modal';\nimport history from '../../history';\nimport {fetchStream, deleteStream} from '../../actions';\n\nclass StreamDelete extends React.Component {\n    componentDidMount(){\n        //this.props.fetchStream(this.props.match.params.id) //unncessary cause stream list component sets state\n    };\n\n     renderActions(){\n         return(\n        <React.Fragment> \n            <button onClick={() => this.props.deleteStream(this.props.match.params.id)} className=\"ui negative button\">Delete</button>\n            <Link to=\"/\" className=\"ui button\">Cancel</Link>\n        </React.Fragment>\n         );\n     };\n\n     renderContent(){\n        if (!this.props.stream){\n            return \"Loading\";\n        }\n\n        else{\n            return \"Are You Sure You Want To Delete: \" + this.props.stream.title;\n        }\n     };\n\n    render(){\n        return (\n            <div>\n                <Modal header=\"Delete?\" content={this.renderContent()} onDismiss={() => history.push(\"/\")} actions = {this.renderActions()}/>\n            </div>\n    );\n    }\n\n};\n\nconst mapStateToProps = (state, ownProps) =>{\n    return {stream: state.streamreducer[ownProps.match.params.id]}\n};\n\nexport default connect(mapStateToProps, {fetchStream, deleteStream})(StreamDelete);","import React from 'react';\nimport {connect} from 'react-redux';\nimport {fetchStream, editStream} from '../../actions';\nimport StreamForm from './StreamForm';\nimport _ from 'lodash';\n\nclass StreamEdit extends React.Component {\n    componentDidMount(){\n        this.props.fetchStream(this.props.match.params.id)\n    };\n    \n    onSubmit = (formValues) =>{\n        this.props.editStream(this.props.match.params.id, formValues);\n        \n    };\n\n    render(){\n        if (!this.props.stream){\n            return <div>Nothing Here :)</div>;\n        }\n        else{\n\n            return (\n                <div>\n                    <h2 className = \"ui center aligned header\">Edit Post: {this.props.stream.title} </h2>\n                    <StreamForm\n                        initialValues={_.pick(this.props.stream, 'title', 'description')}\n                        onSubmit ={this.onSubmit}\n                        />\n                </div>\n            );\n        }\n    };\n\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    return {stream: state.streamreducer[ownProps.match.params.id]};\n};\n\nexport default connect(mapStateToProps, {fetchStream, editStream})(StreamEdit);","import React from 'react';\nimport {connect} from 'react-redux';\nimport {likePost} from '../../actions';\n\nclass LikePost extends React.Component {\n\n    calculatelikes(likes){\n        if (!likes){\n            return 0;\n        }\n        else {\n            return likes.length;\n        }\n    }\n    \n    checkLikes(likes){\n        if (!likes) {return false;}\n\n        for (let i = 0; i < likes.length; i++){\n            if (likes[i] === this.props.currentUserId){\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    editLikes = (id) => {\n        \n        let item = this.props.streams;\n        for (let i = 0; i <item.length; i++){\n            if (item[i].id === id){\n\n\n                if (!item[i].likes){return [this.props.currentUserId];}\n                \n                for (let j = 0; j <item[i].likes.length; j++){\n                    if (item[i].likes[j] === this.props.currentUserId){\n       \n                        item[i].likes[j] = null;\n\n                        return item[i].likes.filter((user) => user !== null);\n                    }\n\n                }\n                \n\n                return [...(item[i].likes), this.props.currentUserId];\n            }\n        }\n    }\n\n\n    render(){\n        return <i style = {{cursor: \"pointer\"}} onClick = {() => {if (this.props.isSignedIn) {this.props.likePost(this.props.streamid, this.props.currentUserId, this.editLikes(this.props.streamid)) } else{alert(\"You Must Login To Like A Post\")}}} className = {`large middle aligned icon heart ${this.checkLikes(this.props.streamlikes)  ? \"red\" : \"outline\"}`}> { this.calculatelikes(this.props.streamlikes)}</i>;\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n            currentUserId: state.authreducer.userId,\n            isSignedIn: state.authreducer.isSignedIn,\n            streams: Object.values(state.streamreducer)\n    };\n};\n\nexport default connect(mapStateToProps, {likePost})(LikePost);","import React from 'react';\nimport {connect} from 'react-redux';\nimport {fetchStreams, empty, likePost} from '../../actions';\nimport {Link} from 'react-router-dom';\nimport LikePost from './LikePost';\n\nclass StreamList extends React.Component {\n    \n    componentDidMount(){\n\n        if (!this.props.filter){\n            this.props.empty();         //will not be called from the profile component so it will not reset state values\n            this.props.fetchStreams();\n        }\n\n    }\n    \n    renderAdmin(stream){\n        if (stream.userId === this.props.currentUserId){\n            return (\n                <div style={{margin: \"0px 0px 1vh 5vw\"}} className=\"right floated content\">\n                    <Link to={`/edit/${stream.id}`} className = \"ui mini inverted button primary\">Edit</Link>\n                    <Link to={`/delete/${stream.id}`} className = \"ui mini button negative\">Delete</Link>\n                    \n                </div>\n            );\n        }\n        else {\n            return <Link to={`/profile/${stream.userId}`} style={{margin: \"0px 0px 1vh 5vw\"}} className=\"ui top right floated mini label\">By: {stream.userId}</Link>;\n        }\n    };\n\n    renderList(){\n        return this.props.streams.map(stream => {\n            return(\n            <div className = \"item\" key ={stream.id}>\n\n                {this.renderAdmin(stream)}\n\n                <LikePost streamid = {stream.id} streamlikes = {stream.likes} />\n\n                <Link to= {`/show/${stream.id}`} className = \"content\">\n\n                    <h3 className = \"header\">\n                    {stream.title}\n                    </h3>\n\n                    <div className =  \"description\" \n\n                        style={{\n                            overflow: \"hidden\", \n                            textOverflow: \"ellipsis\", \n                            wordBreak: \"break-all\", \n                            display: \"-webkit-box\", \n                            WebkitLineClamp: \"3\", \n                            WebkitBoxOrient: \"vertical\",\n                            marginBottom: \"1vh\"}}>\n\n                        <h5>{stream.description}</h5>\n                    </div>\n\n                </Link>\n            </div>\n            );\n        });\n    };\n\n    renderCreate(){\n        if (this.props.isSignedIn && !this.props.noButton){\n            return (\n                <div>\n                    <Link to= \"create\" className = \"ui button inverted secondary fluid\"> \n                        Create a Post\n                    </Link>\n                </div>\n            );\n        }\n        else if (!this.props.noButton){\n            return (\n                <div>\n                    <div onClick = {()=> alert(\"You Must Login To Create A Post\")} to = \"/signin\" className = \"ui button inverted secondary fluid\"> \n                        Create a Post\n                    </div>\n                </div>\n            ); \n        }\n    };\n\n    \n\n    render(){\n        if (!this.props.streams[0]){return null;} //waits for state to load before rendering ****code will break if 0 posts are on api\n        return (\n            <div className = \"ui raised segments\">\n                <div style={{background: \"#e6e6e6\"}}>\n                    <br/>\n                    <h1 className = \"ui center aligned header\">Posts</h1>            \n                    {this.renderCreate()}\n                    <div className = \"ui celled list\">{this.renderList()}</div>\n                    {this.renderCreate()}\n                </div>\n            </div>\n        );\n    };\n    \n};\n\nconst mapStateToProps = (state) => {\n    return {\n        streams: Object.values(state.streamreducer), \n        currentUserId: state.authreducer.userId,\n        isSignedIn: state.authreducer.isSignedIn\n    };\n};\n\nexport default connect(mapStateToProps, {fetchStreams, empty, likePost})(StreamList);","import React from 'react';\n\nimport {connect} from 'react-redux';\nimport {Link} from 'react-router-dom';\n\nimport {fetchStream, fetchComments, fetchReplies} from '../../actions';\nimport LikePost from './LikePost'\n\n\nclass StreamShow extends React.Component {\n    componentDidMount(){\n        this.props.fetchStream(this.props.match.params.id);\n        this.props.fetchComments(this.props.match.params.id);\n        this.props.fetchReplies();\n    };\n\n    renderAdmin(comment){\n        \n            return <Link to={`/profile/${comment.userId}`} style={{margin: `0px 0vw 1vh 5vw`}} className=\"ui top right floated mini label\">By: {comment.userId}</Link>;\n        \n    };\n\n    renderReplies(commentid){\n        if (!this.props.replies){return null;}\n        return this.props.replies.map(reply => { \n            if (reply.commentId != commentid){return null;}\n\n            return (\n                <div className = \"item\" key = {reply.id}>\n                    <br/>\n                       \n                    <i className = \"small grey right triangle icon\" />\n                        \n                        <div className = \"content\">\n                            {reply.description}          \n                        </div>\n                        <div className = \"content\">\n                            {this.renderAdmin(reply)} \n                        </div>\n                    </div>\n            );\n            \n        })\n    }\n\n    renderComments(){\n        if (!this.props.comments) {return null;}\n        return this.props.comments.map(comment =>{\n            return (\n                <div style = {{\n                    overflow: \"hidden\", \n                    textOverflow: \"ellipsis\", \n                    wordBreak: \"break-all\", \n                    display: \"-webkit-box\", \n                    WebkitBoxOrient: \"vertical\"\n                }}\n                className = \"item\" key = {comment.id}>\n                    <div className = \"ui divider\"></div>\n\n                    <i className = \"black right triangle icon\" />\n\n                    <div style = {{paddingRight: \"1.5vw\"}} className = \"content\">\n                        {comment.description} {this.renderReplyButton(comment)}\n                    </div>\n\n                     <div style = {{marginRight: \"1.5vw\"}} className = \"content\">\n                        {this.renderAdmin(comment)}\n                    </div>\n\n                    <div style = {{marginTop: \"-2.5vh\", marginLeft: \"2vw\", marginRight: \"3vw\"}} className = \"list\">\n                            {this.renderReplies(comment.id)}\n                    </div>\n                \n                    \n                </div>\n            );\n\n\n\n        })\n    }\n\n    renderReplyButton = (comment) =>{\n        if (this.props.isSignedIn){\n            return <Link to={`/comment/${this.props.match.params.id}/reply/${comment.id}`}style = {{cursor: \"pointer\"}} className = \"ui mini label\">Reply</Link>;\n        }\n        else{\n            return <div onClick = {()=> alert(\"You Must Login To Reply\")} style = {{cursor: \"pointer\"}} className = \"ui mini label\">Reply</div>;\n        }\n    }\n\n    renderCreateComment = () =>{\n        if (this.props.isSignedIn){\n            return (<Link to ={`/comment/${this.props.stream.id}`} className = \"ui mini right floated button inverted secondary\">\n                        Create Comment\n                    </Link >);\n        }\n        else {\n            return (<div onClick = {()=> alert(\"You Must Login Comment\")} className = \"ui mini right floated button inverted secondary\">\n            Create Comment\n        </div>);\n        }\n\n    }\n\n\n    render(){\n        if (!this.props.stream){\n            return <div>loading</div>;\n        }\n\n        else{\n            return (\n                <div className = \"ui raised segments\">\n                    \n                    <div style={{background: \"#e6e6e6\"}} className = \"ui segment\">\n                        <div className = \"ui list\">\n                            <div className = \"item\">\n                                <div className = \"left floated content\">\n                                    <LikePost streamid = {this.props.stream.id} streamlikes = {this.props.stream.likes} />\n                                </div>\n                    \n                                \n                                <div style = {{wordBreak: \"break-all\"}} className = \"content\">\n                                    <h1 className = \"header\">{this.props.stream.title} <Link to={`/profile/${this.props.stream.userId}`} style={{margin: `0px 0vw 1vh 5vw`}} className=\"ui right floated small label\">By: {this.props.stream.userId}</Link></h1>\n                                    <br/>\n                                    <h5 style={{margin: \"0px 5vw 0px 5vw\"}} className = \"description\">{this.props.stream.description}</h5>\n                                    <br/>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n\n                    <div style={{background: \"#e6e6e6\"}} className = \"ui segment\">\n\n                        {this.renderCreateComment()}\n\n                        <p>| Comments |</p>\n                        <div className = \"ui list\">\n                            {this.renderComments()}\n                        </div>\n                    </div>\n                </div>\n            );\n            \n        };\n\n    };\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    return {stream: state.streamreducer[ownProps.match.params.id],\n            currentUserId: state.authreducer.userId,\n            isSignedIn: state.authreducer.isSignedIn,\n            comments: Object.values(state.commentReducer),\n            replies: Object.values(state.replyReducer)\n    };\n};\n\nexport default connect(mapStateToProps, {fetchStream, fetchComments, fetchReplies})(StreamShow);","import React from 'react';\nimport {connect} from 'react-redux';\nimport {Route } from 'react-router-dom';\n\nimport Modal from '../Modal';\nimport history from '../../history';\nimport StreamShow from './StreamShow';\nimport StreamForm from './StreamForm';\nimport {createComment, replyComment} from '../../actions'\n\nclass CommentPost extends React.Component {\n     \n\n     renderContent(){\n         \n        if (!this.props.stream){\n            return \"Loading\";\n        }\n\n        else{\n            return (\n                <StreamForm notitle = {true} onSubmit={this.onSubmit} />\n            );\n        }\n     };\n\n     onSubmit = (formValues) => {\n        if (this.props.match.path !== \"/comment/:id/reply/:replyid\"){\n            this.props.createComment(formValues, this.props.match.params.id);\n        }\n        else{\n            this.props.replyComment(formValues, this.props.match.params.id, this.props.match.params.replyid);\n        }\n    };\n\n    render(){\n        return (\n            <div>\n                <Route path = \"/comment/:id\" exact component = {StreamShow} />\n                <Route path = \"/comment/:id/reply/:replyid\" exact component = {StreamShow} />\n                <Modal header=\"Add Comment\" content={this.renderContent()} onDismiss={() => history.push(`/show/${this.props.match.params.id}`)}/>\n            </div>\n    );\n    }\n\n};\n\nconst mapStateToProps = (state, ownProps) =>{\n    return {stream: state.streamreducer[ownProps.match.params.id]}\n};\n\nexport default connect(mapStateToProps, {createComment, replyComment})(CommentPost);","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport { filterStreams, fetchStreams, empty } from '../../actions';\nimport StreamList from './StreamList';\n\n\n\nclass Profile extends React.Component {\n    async fetch(){\n        this.props.empty(); \n        await this.props.fetchStreams();    //will allow for state to load so it can then be filtered\n        this.props.filterStreams(this.props.match.params.id); //fiters streams to match id of userid in url\n    }\n\n    componentDidMount(){\n        this.fetch();\n    }\n\n    render(){\n        return (\n            <div>\n                <h3>USER: {this.props.match.params.id}</h3>\n                <h3>Total Posts: {this.props.streams.length}</h3>\n                <h3>Total Likes: {this.totalLikes()} </h3>\n                <StreamList noButton = {true} filter= {true} />\n            </div>\n        );\n    };\n\n    totalLikes = () =>{\n        if (!this.props.streams[0]){return 0;}\n\n        return (this.props.streams.map((stream => {if (!stream.likes) {return 0;} else {return stream.likes.length}})).reduce((a,b) => a+b));\n        \n    }\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        streams: Object.values(state.streamreducer)\n    };\n};\n\nconst profileexport = connect(mapStateToProps, {filterStreams, fetchStreams, empty})(Profile);\nexport default profileexport;","import React from 'react';\nimport {connect} from 'react-redux';\nimport {signIn, signOut} from '../actions';\n\n\nclass GoogleAuth extends React.Component {\n    componentDidMount(){\n        window.gapi.load('client:auth2', () =>{\n            window.gapi.client.init({\n                clientId: '1048850885197-bbpfntuqpmjfjckfenech4brhoo6aufm.apps.googleusercontent.com', \n                scope: 'email'\n            }).then(()=>{\n                this.auth = window.gapi.auth2.getAuthInstance();\n                this.onAuthChange(this.auth.isSignedIn.get());\n                this.auth.isSignedIn.listen(this.onAuthChange);\n            });\n        });\n    };\n\n\n    attemptSignIn = () => {\n        this.auth.signIn();\n    };\n\n    attemptSignOut = () => {\n        this.auth.signOut();\n    };\n\n    onAuthChange = (isSignedIn) => {\n        if (isSignedIn){\n            this.props.signIn(this.auth.currentUser.get().getId());\n        }\n        else {\n            this.props.signOut();\n        }\n    };\n\n    renderAuthButton(){\n        if (this.props.isSignedIn === null){\n            return null;\n        }\n        else if (this.props.isSignedIn === true){\n            return (\n                <button onClick = {this.attemptSignOut} className = \"ui red google button\">\n                    <i className=\"google icon\" />\n                    Sign Out\n                </button>\n            );\n        }\n        else {\n            return (\n                <button onClick = {this.attemptSignIn} className = \"ui red google button\">\n                    <i className=\"google icon\" />\n                    {this.props.isSignedIn}\n                    Sign In\n                </button>\n            );\n        }\n    };\n    render(){\n        return <div>{this.renderAuthButton()}</div>;\n\n    };\n\n};\n\nconst mapStateToProps = (state) => {\n    return {isSignedIn: state.authreducer.isSignedIn};\n\n};\n\nexport default connect(mapStateToProps, {signIn, signOut})(GoogleAuth);","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport GoogleAuth from './GoogleAuth';\nimport {connect} from 'react-redux';\n\nclass Header extends React.Component{\n    render(){\n        return (\n            <div style ={{background: \"#e6e6e6\"}} className = \"ui secondary pointing menu\">\n                <Link to = \"/\" className = \"item\" >Forum</Link>\n                <div className = \"right menu\">\n                    {this.renderViewProfile()}\n                    <GoogleAuth />\n                </div>\n\n\n\n            </div>\n        );\n    }\n\n\n    renderViewProfile(){\n        if (this.props.currentUserId){\n            return <Link to = {`/profile/${this.props.currentUserId}`} className = \"item\">View Profile</Link>;\n        }\n        else{\n            return <div style = {{cursor: \"pointer\"}} onClick = {()=> alert(\"You Must Login To View Your Profile\")} className = \"item\">View Profile</div>;\n        }\n    }\n};\nconst mapStateToProps = (state) => {\n    return {\n        currentUserId: state.authreducer.userId\n    };\n};\n\nexport default connect(mapStateToProps, null)(Header);","import React from 'react';\nimport { Router, Route } from 'react-router-dom';\n\nimport StreamCreate from './streams/StreamCreate';\nimport StreamDelete from './streams/StreamDelete';\nimport StreamEdit from './streams/StreamEdit';\nimport StreamList from './streams/StreamList';\nimport StreamShow from './streams/StreamShow';\nimport CommentPost from './streams/CommentPost';\nimport Profile from './streams/StreamProfile';\nimport Header from './Header'\nimport history from '../history'\nimport  '../responsive.css'\n\n\nconst App = () =>{\n    \n    return (<div>\n        <Router history = {history}>\n            <div>\n                <Header />\n                <div style={{display: \"flex\", justifyContent: \"center\"}}>\n                    <div className = \"phone\">\n                <Route path = {[\"/\", \"/delete/:id\"]}  exact component = {StreamList} />\n                <Route path = \"/profile/:id\"  exact component = {Profile} />\n                <Route path = \"/show/:id\" exact component = {StreamShow} />\n                <Route path = \"/edit/:id\" exact component = {StreamEdit} />\n                <Route path = \"/comment/:id\" exact component = {CommentPost} />\n                <Route path = \"/comment/:id/reply/:replyid\" exact component = {CommentPost} />\n                <Route path = \"/delete/:id\" exact component = {StreamDelete} />\n                <Route path = \"/create\" exact component = {StreamCreate} />\n                    </div>\n                </div>\n            </div>    \n        </Router>\n        </div>\n    );\n};\n\nexport default App;","import {SIGN_IN, SIGN_OUT} from '../actions/types';\n\nconst INITIAL_STATE = {\n    isSignedIn: null,\n    userId: null\n};\n\nconst authReducer = (state = INITIAL_STATE, action) => {\n    switch (action.type){\n        case SIGN_IN:\n            return {...state, isSignedIn: true, userId: action.payload};\n        case SIGN_OUT: \n            return {...state, isSignedIn: false, userId: null};\n        default:\n            return state;\n    }\n};\n\nexport default authReducer;","import {CREATE_STREAM, FETCH_STREAM, FETCH_STREAMS, DELETE_STREAM, EDIT_STREAM} from '../actions/types';\nimport _ from 'lodash';\n\nconst streamReducer = (state = {}, action) =>{\n    switch(action.type){\n        case EDIT_STREAM:\n            return {...state, [action.payload.id]: action.payload};\n\n        case FETCH_STREAM:\n            return {...state, [action.payload.id]: action.payload};\n\n        case FETCH_STREAMS:\n            return {...state, ..._.mapKeys(action.payload, 'id')};\n\n        case DELETE_STREAM:\n            return _.omit(state, action.payload);\n\n        case CREATE_STREAM:\n            return {...state, [action.payload.id]: action.payload};\n\n        case \"FILTER_STREAMS\":\n            let temp = (Object.values(state).filter( item =>  action.payload === item.userId));\n            return {..._.mapKeys(temp, 'id')};\n        \n        case \"EMPTY\":\n            return {}\n\n        default:\n            return state;\n    };\n};\n\nexport const commentReducer = (state = {}, action) =>{\n    switch(action.type){\n        case \"FETCH_COMMENTS\":\n            return {..._.mapKeys(action.payload, 'id')};\n\n        case \"CREATE_COMMENT\":\n            return {...state, [action.payload.id]: action.payload};\n            \n        default:\n            return state;\n    };\n};\n\nexport const replyReducer = (state = {}, action) =>{\n    switch(action.type){\n        case \"FETCH_REPLIES\":\n            return {..._.mapKeys(action.payload, 'id')};\n\n        case \"REPLY_COMMENT\":\n            return {...state, [action.payload.id]: action.payload};\n            \n        default:\n            return state;\n    };\n};\n\n\n\nexport default streamReducer;","import {combineReducers} from 'redux';\nimport authReducer from './authReducer';\nimport {reducer as formReducer} from 'redux-form';\nimport streamReducer from './streamReducer';\nimport {commentReducer, replyReducer} from './streamReducer';\n\nexport default combineReducers({\n    authreducer: authReducer,\n    form: formReducer,\n    streamreducer: streamReducer,\n    commentReducer: commentReducer,\n    replyReducer: replyReducer\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(reduxThunk)));\n\nReactDOM.render(\n    <Provider store = {store}>\n        <App />\n    </Provider>,\n    document.querySelector('#root')\n);"],"sourceRoot":""}